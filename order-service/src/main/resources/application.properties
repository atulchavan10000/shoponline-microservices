spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service
spring.datasource.username=springstudent
spring.datasource.password=springstudent
spring.jpa.hibernate.ddl-auto=update
server.port=8082

##eureka properties
spring.application.name=order-service
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
eureka.instance.leaseRenewalIntervalInSeconds=5
eureka.instance.metadataMap.instanceId=?{spring.application.name}:?{random.value}
eureka.instance.preferIpAddress=true

## actuator + circuit breaker
management.health.circuitbreakers.enabled=true

#Resiliance4j Properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resiliance4j timeout properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3

#Resilience4j Retry properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

## actuator
management.endpoints.web.exposure.include=*
management.info.env.enabled=true

## Distributed tracing with micrometer and zipkin
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# Kafka Properties for producer
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
## you need to map OrderPlacedEvent of producer with consumer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.shoponline.orderservice.event.OrderPlacedEvent

